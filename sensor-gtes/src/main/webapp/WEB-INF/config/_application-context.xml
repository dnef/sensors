<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="
  http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/tx
  http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:property-placeholder location="classpath:util.properties"/>
    <!-- Add support for component scanning +++++++-->
    <context:component-scan base-package="gtes"/>
    <!-- Add support for conversion, formatting and validation support++++++++ -->
    <mvc:annotation-driven/>
    <mvc:annotation-driven validator="validator"/>
    <!--    spring.jpa.properties.javax.persistence.validation.mode=none-->
    <!-- Define Spring MVC view resolver JSP-->
    <!--<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />-->
    <!--<property name="prefix" value="/WEB-INF/views/" />-->
    <!--<property name="viewNames" value="jsp/*" />-->
    <!--<property name="suffix" value=".jsp" />-->
    <!--</bean>-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!-- you also need to define an adapter, otherwise you will get a ServletException while handling the request -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
    <!-- Define Spring MVC view resolver thymeleaf++++++++++-->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="characterEncoding" value="UTF-8"/>
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->
        <property name="cacheable" value="true"/>
    </bean>
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed up  -->
        <!-- execution in most scenarios, but might be incompatible with specific    -->
        <!-- cases when expressions in one template are reused across different data -->
        <!-- ypes, so this flag is "false" by default for safer backwards            -->
        <!-- compatibility.                                                          -->
        <!--<property name="enableSpringELCompiler" value="true" />-->
    </bean>
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <!--<property name="viewNames" value="/thymeleaf/*" />-->
        <!-- NOTE 'order' and 'viewNames' are optional -->
        <!--<property name="order" value="1" />-->
        <!--<property name="viewNames" value="*.html,*.xhtml" />-->
    </bean>
    <bean id="Java8TimeDialect" class="org.thymeleaf.extras.java8time.dialect.Java8TimeDialect"></bean> <!--????-->
    <!-- Step 1: Define Database DataSource / connection pool -->

    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- these are connection pool properties for C3P0 -->
        <property name="maxStatements" value="1500"/>
        <property name="maxStatementsPerConnection" value="50"/>
        <property name="idleConnectionTestPeriod" value="3600"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="20"/>
        <property name="maxIdleTime" value="30000"/>
        <property name="checkoutTimeout" value="10000"/>
        <property name="testConnectionOnCheckin" value="true"/>
        <property name="privilegeSpawnedThreads" value="true"/>
        <property name="contextClassLoaderSource" value="library"/>
    </bean>
    <!-- Step 2: Setup Hibernate session factory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="packagesToScan" value="gtes.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/zmb_pribor</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <!--                <prop key="javax.persistence.validation.factory">#{validator}</prop>-->
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>
    <!-- Step 3: Setup Hibernate transaction manager -->
    <bean id="myTransactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- Step 4: Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="myTransactionManager"/>
    <!-- Add support for reading web resources: css, images, js, etc ... +++++++-->
    <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>

    <!--<mvc:view-controller path="/index.html" view-name="/index"/>-->

    <mvc:view-controller path="/install.html" view-name="install"/>


</beans>